from sklearn import tree
from sklearn.naive_bayes import GaussianNB							
from sklearn.svm import SVC
from sklearn.gaussian_process import GaussianProcessClassifier

						
clf = tree.DecisionTreeClassifier()			#decision tree
clf2= SVC() 						                #simple SVM
clf1 = GaussianNB() 					          #naive_bayes					
clf3 = GaussianProcessClassifier()			#Gaussian Process Classifier
# CHALLENGE - create 3 more classifiers...

# [height, weight, shoe_size]
X = [[181, 80, 44], [177, 70, 43], [160, 60, 38], [154, 54, 37], [166, 65, 40],
     [190, 90, 47], [175, 64, 39],
     [177, 70, 40], [159, 55, 37], [171, 75, 42], [181, 85, 43]]

Y = ['male', 'male', 'female', 'female', 'male', 'male', 'female', 'female',
     'female', 'male', 'male']


# CHALLENGE - ...and train them on our data
clf = clf.fit(X, Y)
clf1 = clf1.fit(X, Y)
clf2 = clf2.fit(X, Y)
clf3 = clf3.fit(X, Y)


prediction = clf.predict([[190, 70, 43]])
prediction1 = clf1.predict([[190, 70, 43]])
prediction2 = clf2.predict([[190, 70, 43]])
prediction3 = clf3.predict([[190, 70, 43]])


# CHALLENGE compare their reusults and print the best one!

most_accurate = max(prediction,prediction1,prediction2,prediction3)

if most_accurate == prediction :
    print("decision tree")
elif most_accurate == prediction1 :
    print("naive bayes")
elif most_accurate == prediction2 :
    print("simple SVM")
elif most_accurate == prediction3 :
    print("gaussian process classifier")

